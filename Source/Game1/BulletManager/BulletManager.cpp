/////////////////////////////////////////////////////
// Name : BulletManager
//
// Author : 山田 聖弥
//
// Day : 2017/7/14
/////////////////////////////////////////////////////
#include "../Bullet/Bullet.h"
#include "BulletManager.h"

/////////////////////////////////////////////////////
// Name : BulletManager
//
// Over View : コンストラクタ
//
// Argument : 無し
/////////////////////////////////////////////////////
BulletManager::BulletManager()
{
}

/////////////////////////////////////////////////////
// Name : ~BulletManager
//
// Over View : デストラクタ
//
// Argument : 無し
/////////////////////////////////////////////////////
BulletManager::~BulletManager()
{
	Clear();
}

/////////////////////////////////////////////////////
// Name : Initialize
//
// Over View : 初期化処理
//
// Argument : 無し
//
// Return : 無し
/////////////////////////////////////////////////////
void BulletManager::Initialize()
{
	Clear();
}

/////////////////////////////////////////////////////
// Name : Update
//
// Over View : 更新処理
//
// Argument : 無し
//
// Return : 無し
/////////////////////////////////////////////////////
void BulletManager::Update()
{
	auto it = bulletList_.begin();
	while (it != bulletList_.end())
	{
		//更新処理が止まっていたらリストから削除
		if (!(*it)->Update())
		{
			it = bulletList_.erase(it);
		}
		else
		{
			it++;
		}
	}
}

/////////////////////////////////////////////////////
// Name : Render
//
// Over View : 描画処理
//
// Argument : 無し
//
// Return : 無し
/////////////////////////////////////////////////////
void BulletManager::Render()
{
	for each(auto it in bulletList_)
	{
		it->Render();
	}
}

/////////////////////////////////////////////////////
// Name : Add
//
// Over View : 弾の追加
//
// Argument : 無し
//
// Return : 無し
/////////////////////////////////////////////////////
void BulletManager::Add(std::shared_ptr<Bullet> bullet)
{
	bulletList_.push_back(bullet);
}

/////////////////////////////////////////////////////
// Name : Clear
//
// Over View : 弾の全消去
//
// Argument : 無し
//
// Return : 無し
/////////////////////////////////////////////////////
void BulletManager::Clear()
{
	bulletList_.clear();
}
